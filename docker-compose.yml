version: '3.8'

services:
  combustible-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: combustible-api:1.0.0
    container_name: combustible-api
    restart: always
    environment:
      PORT: "3080"
      APP_PORT: "3080"
      NODE_ENV: "production"
      DATABASE_URL: "postgresql://postgres:jtorres159.@postgres:5432/control_combustible_v4?connection_limit=50&pool_timeout=20&connect_timeout=60&statement_timeout=30000"
      JWT_SECRET: "tu-jwt-secret-muy-seguro-aqui-cambiar-en-produccion"
      JWT_EXPIRES_IN: "1d"
      DEFAULT_ROLE_NAME: "USER"
      CORS_ORIGIN: "https://combustible-api.syncronize.net.pe,https://syncronize.net.pe,https://www.syncronize.net.pe,https://api.syncronize.net.pe,http://localhost:3080,http://localhost:8080"
      WS_CORS_ORIGIN: "https://combustible-api.syncronize.net.pe"
      CLOUDINARY_CLOUD_NAME: "doglf2gsy"
      CLOUDINARY_API_KEY: "485335513153247"
      CLOUDINARY_API_SECRET: "rVefITbGKMyrl9G2pmliO-uaAko"
    
    ports:
      - "3080:3080"
    
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    
    networks:
      - elastika-network

    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3080/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  elastika-network:
    external: true